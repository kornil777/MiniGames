// 1-—è –∏–≥—Ä–∞ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ

function startGame1() {
  const randomNumber = Math.floor(Math.random() * 100) + 1;
  console.log("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ:", randomNumber);

  alert("–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100\n–ù–∞–∂–º–∏—Ç–µ '–û—Ç–º–µ–Ω–∞' –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ –∏–≥—Ä—ã");

  while (true) {
    const input = prompt(`–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100`);

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–º–µ–Ω—ã
    if (input === null) {
      alert("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±—ã–ª–æ: " + randomNumber);
      return;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    if (input.trim() === "") {
      alert("–í—ã –Ω–∏—á–µ–≥–æ –Ω–µ –≤–≤–µ–ª–∏! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
      continue;
    }

    const userNumber = Number(input);

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∏—Å–ª–æ
    if (isNaN(userNumber)) {
      alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!");
      continue;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–ø–∞–∑–æ–Ω–∞
    if (userNumber < 1 || userNumber > 100) {
      alert("–ß–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç 1 –¥–æ 100!");
      continue;
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–≥–∞–¥—ã–≤–∞–Ω–∏—è
    if (userNumber === randomNumber) {
      alert(`üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!!! –í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ ${randomNumber}!`);
      break;
    } else if (userNumber > randomNumber) {
      alert("‚¨áÔ∏è –¢–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ!");
    } else {
      alert("‚¨ÜÔ∏è –¢–≤–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ –∑–∞–≥–∞–¥–∞–Ω–Ω–æ–≥–æ, –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ!");
    }
  }

  // –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑
  if (confirm("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?")) {
    startGame1();
  }
}

// 2-—è –∏–≥—Ä–∞ –ü—Ä–æ—Å—Ç–∞—è –∞—Ä–∏—Ñ–º–µ—Ç–∏–∫–∞
function Game2task() {
  const operations = ["+", "-", "*", "/"];
  const operation = operations[Math.floor(Math.random() * operations.length)];

  let num1, num2, answer;

  switch (operation) {
    case "+":
      num1 = Math.floor(Math.random() * 20) + 1;
      num2 = Math.floor(Math.random() * 20) + 1;
      answer = num1 + num2;
      break;

    case "-":
      num1 = Math.floor(Math.random() * 20) + 10;
      num2 = Math.floor(Math.random() * num1) + 1;
      answer = num1 - num2;
      break;

    case "*":
      num1 = Math.floor(Math.random() * 10) + 1;
      num2 = Math.floor(Math.random() * 10) + 1;
      answer = num1 * num2;
      break;

    case "/":
      num2 = Math.floor(Math.random() * 10) + 1;
      answer = Math.floor(Math.random() * 10) + 1;
      num1 = num2 * answer;
      break;
  }

  return {
    question: `${num1} ${operation} ${num2}`,
    answer: answer,
  };
}

function startGame2() {
  const problem = Game2task();
  const userAnswer = prompt(`–†–µ—à–∏—Ç–µ –ø—Ä–∏–º–µ—Ä: ${problem.question}`);

  if (userAnswer === null) {
    alert("–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!");
    return;
  }

  const numericAnswer = parseFloat(userAnswer);

  if (isNaN(numericAnswer)) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ!");
  } else if (Math.abs(numericAnswer - problem.answer) < 0.001) {
    alert("–ü—Ä–∞–≤–∏–ª—å–Ω–æ! –ú–æ–ª–æ–¥–µ—Ü!");
  } else {
    alert(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${problem.answer}`);
  }

  if (confirm("–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?")) {
    startGame2();
  } else {
    alert("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É!");
  }
}

// 3-—è –∏–≥—Ä–∞ –ü–µ—Ä–µ–≤–µ—Ä–Ω–∏ —Ç–µ–∫—Å—Ç

function startGame3() {
  const userText = prompt("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å:");

  if (userText === null) {
    return;
  }

  if (userText.trim() === "") {
    alert("–í—ã –Ω–µ –≤–≤–µ–ª–∏ —Ç–µ–∫—Å—Ç! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.");
    return;
  }

  const reversedText = userText.split("").reverse().join("");

  alert(`–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç: ${userText}\n–ü–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—ã–π —Ç–µ–∫—Å—Ç: ${reversedText}`);
}

// 4-—è –∏–≥—Ä–∞ –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞

function startGame4() {
  let playAgain = true;

  while (playAgain) {
    const choices = ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"];

    let userChoice;
    while (true) {
      userChoice = prompt("–í—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞");
      if (userChoice === null) {
        alert("–ò–≥—Ä–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞");
        return;
      }
      userChoice = userChoice.toLowerCase().trim();
      if (choices.includes(userChoice)) break;
      alert(
        "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ: –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞"
      );
    }

    // –í—ã–±–æ—Ä –∫–æ–º–ø—å—é—Ç–µ—Ä–∞
    const computerChoice = choices[Math.floor(Math.random() * choices.length)];

    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    let result;

    if (userChoice === computerChoice) {
      result = "–ù–∏—á—å—è!";
    } else if (
      (userChoice === "–∫–∞–º–µ–Ω—å" && computerChoice === "–Ω–æ–∂–Ω–∏—Ü—ã") ||
      (userChoice === "–Ω–æ–∂–Ω–∏—Ü—ã" && computerChoice === "–±—É–º–∞–≥–∞") ||
      (userChoice === "–±—É–º–∞–≥–∞" && computerChoice === "–∫–∞–º–µ–Ω—å")
    ) {
      result = "–í—ã –ø–æ–±–µ–¥–∏–ª–∏!";
    } else {
      result = "–ö–æ–º–ø—å—é—Ç–µ—Ä –ø–æ–±–µ–¥–∏–ª!";
    }

    // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    alert(
      `
–†–ï–ó–£–õ–¨–¢–ê–¢ –ò–ì–†–´

 –í—ã: ${userChoice}
–ö–æ–º–ø—å—é—Ç–µ—Ä: ${computerChoice}

 ${result}

–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?
        `.trim()
    );

    playAgain = confirm("–°—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑?");
  }

  alert("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! ");
}

// 5 -—è –∏–≥—Ä–∞
const quiz = [
  {
    question: "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –Ω–µ–±–∞?",
    options: ["1. –ö—Ä–∞—Å–Ω—ã–π", "2. –°–∏–Ω–∏–π", "3. –ó–µ–ª–µ–Ω—ã–π"],
    correctAnswer: 2, // –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
  },
  {
    question: "–°–∫–æ–ª—å–∫–æ –¥–Ω–µ–π –≤ –Ω–µ–¥–µ–ª–µ?",
    options: ["1. –®–µ—Å—Ç—å", "2. –°–µ–º—å", "3. –í–æ—Å–µ–º—å"],
    correctAnswer: 2,
  },
  {
    question: "–°–∫–æ–ª—å–∫–æ —É —á–µ–ª–æ–≤–µ–∫–∞ –ø–∞–ª—å—Ü–µ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Ä—É–∫–µ?",
    options: ["1. –ß–µ—Ç—ã—Ä–µ", "2. –ü—è—Ç—å", "3. –®–µ—Å—Ç—å"],
    correctAnswer: 2,
  },
];

function startGame5() {
  let correctAnswers = 0;

  for (let i = 0; i < quiz.length; i++) {
    const currentQuestion = quiz[i];

    let questionText = `–í–æ–ø—Ä–æ—Å ${i + 1}/${quiz.length}:\n${
      currentQuestion.question
    }\n\n`;
    questionText += currentQuestion.options.join("\n");
    questionText += "\n\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞:";

    const userAnswer = parseInt(prompt(questionText));

    if (userAnswer === currentQuestion.correctAnswer) {
      correctAnswers++;
      alert("–ü—Ä–∞–≤–∏–ª—å–Ω–æ!");
    } else {
      alert(`–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: ${currentQuestion.correctAnswer}`);
    }
  }

  showQuizResult(correctAnswers);
}

function showQuizResult(correctAnswers) {
  const totalQuestions = quiz.length;
  const percentage = Math.round((correctAnswers / totalQuestions) * 100);

  let resultMessage = `–í–ò–ö–¢–û–†–ò–ù–ê –ó–ê–í–ï–†–®–ï–ù–ê!\n\n`;
  resultMessage += `–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${correctAnswers} –∏–∑ ${totalQuestions}\n`;
  resultMessage += `–ü—Ä–æ—Ü–µ–Ω—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: ${percentage}%\n\n`;

  // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ü–µ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
  if (correctAnswers === totalQuestions) {
    resultMessage += " –û—Ç–ª–∏—á–Ω–æ! –í—ã –æ—Ç–ª–∏—á–Ω–æ –æ—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã!";
  } else if (correctAnswers >= totalQuestions / 2) {
    resultMessage += "–•–æ—Ä–æ—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!";
  } else {
    resultMessage += " –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!";
  }

  alert(resultMessage);
}

// 6-—è –∏–≥—Ä–∞

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ HEX
function getRandomColor() {
  const hexChars  = "0123456789ABCDEF";
  let color = "#";
  for (let i = 0; i < 6; i++) {
    color += hexChars [Math.floor(Math.random() * 16)];
  }
  return color;
}


// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–≥—Ä—ã
const backgroundColorEL = document.querySelector("body");
function startGame6() {
  alert(
    " –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ª—É—á–∞–π–Ω—ã—Ö —Ü–≤–µ—Ç–æ–≤!\n\n–ù–∞–∂–∏–º–∞–π—Ç–µ OK –¥–ª—è —Å–º–µ–Ω—ã —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞.\n–ù–∞–∂–º–∏—Ç–µ –û—Ç–º–µ–Ω–∞ –¥–ª—è –≤—ã—Ö–æ–¥–∞."
  );

  let continueGame = true;

  while (continueGame) {
    // –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ö–æ—á–µ—Ç –ª–∏ –æ–Ω —Å–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç
    const userResponse = confirm("–•–æ—Ç–∏—Ç–µ —Å–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç —Ñ–æ–Ω–∞?");

    if (userResponse) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ü–≤–µ—Ç
      const randomColor = getRandomColor();

      // –ú–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
      backgroundColorEL.style.backgroundColor = randomColor;

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ü–≤–µ—Ç–µ
      alert(` –ù–æ–≤—ã–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞: ${randomColor}\n\nHEX: ${randomColor}`);
    } else {
      continueGame = false;
      alert("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É! \n–ü–æ—Å–ª–µ–¥–Ω–∏–π —Ü–≤–µ—Ç –æ—Å—Ç–∞–ª—Å—è –Ω–∞ —Ñ–æ–Ω–µ.");
    }
  }
}

// –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ–ª–æ—Å—ã
function duplicateStripeContent() {
  const stripe = document.querySelector(".stripe");
  if (stripe) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π HTML
    const originalContent = stripe.innerHTML;
    // –î—É–±–ª–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    stripe.innerHTML += originalContent;
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —à–∏—Ä–∏–Ω—É —Ä–∞–≤–Ω—É—é –¥–≤—É–º –æ—Ä–∏–≥–∏–Ω–∞–ª–∞–º
    stripe.style.width = 3220 * 2 + "px";
  }
}






const goBtnEl = document.querySelector(".main__button");
function scrollToTarget() {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —à–∏—Ä–∏–Ω—É —ç–∫—Ä–∞–Ω–∞
    const isMobile = window.innerWidth <= 1402; // 768px - –æ–±—ã—á–Ω—ã–π –±—Ä–µ–π–∫–ø–æ–∏–Ω—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
    
    const targetId = isMobile ? 'mobile-target' : 'desktop-target';
    const targetElement = document.getElementById(targetId);
    
    if (targetElement) {
        // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª —Å —É—á–µ—Ç–æ–º header'–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        const headerHeight = document.querySelector('header')?.offsetHeight || 0;
        const offset = headerHeight + 20; // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç—Å—Ç—É–ø 20px
        
        const targetPosition = targetElement.offsetTop - offset;
        
        window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
        });
    }}
    goBtnEl.addEventListener('click', scrollToTarget);